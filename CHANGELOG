## [2017-01-08] Release 0.5.0
### Summary:
 Full support for Razor Server 1.0.1 - 1.5.0

### Features:
  - Support for Ubuntu Trusty
  - Support for CentOS 7 (From Razor Server 1.4.0)
  - Support for AIO paths (Razor Server >= 1.4.0)
  - Acceptance testing using Beaker included
  
### Deprecated:
  - The microkernel is now based on CentOS 7, so compilation on other platforms is not supported.

## [2017-01-05] Release 0.4.0
### Summary:
 Migrating module to support new Puppet environments.

### Features:
  - Changed dependency to puppet/archive
  - Dropped support for Ruby <= 2.1.x
  - Dropped support for Puppet < 4.0.0
  - General module cleanup
  - Release includes older versions that were not released on the forge:
    * Compatible with Razor Server 1.3.0
    * Composable config file with yaml_setting

## [2014-11-22] Release 0.1.3
### Summary:
 Small bugfixes
 Additional comments regarding dependencies

### Features:
  - REST provider warning if Post fails did not have the correct IP/port variable
  - Autorequire commented, added comments to README and test/types.pp to make sure dependencies are included (requiring less runs)
  - README comment: still 2 runs required due to long startup time of the Razor service
  - Extra validation doe numeric entries, null-pointers in data

## [2014-11-22] Release 0.1.2
### Summary:
 Serious bugfixes

### Features:
  - Added autorequire to Razor Class
  - Found a bug on post_command that was introduced when adding the get_rest_info method
  
## [2014-11-21] Release 0.1.1
### Summary:
 Some beauty fixes - this was my first release to the Forge.

### Features:
  Updated: 
  - README.markdown
  - metadata.json
  
## [2014-11-21] Release 0.1.0
### Summary:
 The initial release for this module. 

### Features:
 - The module allows installation of Razor Server/Client/Database
 - While not recommended, and with limited OS support, the module will allow the compilation of your own microkernel
 - It can also set up a TFTP server and publish the 2 boot images
 - Finally, custom types are available for configuring the Razor Server (through the REST API)
